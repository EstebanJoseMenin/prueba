

#include <ESP8266WiFi.h>
#include <WiFiClient.h>
//ESP Web Server Library to host a web page
#include <ESP8266WebServer.h>
#include <Servo.h>

Servo servo1; 
int posicion=10;



//---------------------------------------------------------------
//Our HTML webpage contents in program memory
const char MAIN_page[] PROGMEM = R"=====(
<!DOCTYPE html>
<html>
<body>
<center>
<h1>ESP8266 Prender y apagar LED</h1><br>
<a href="ledOn">Prender LED</a><br>
<a href="ledOff">Apagar LED</a><br>
<input type="textfield" id="numeros"  name="lograrlo" value=""><br>
Here <a href="ledServo">Servo_on</a><br>
</center>


<center>
    <form action='/ledServo' method='post'>    
      
       <input type="textfield" id="nume"  name="logra" value=""><br>
       <input type='submit' value='ENVIAR'>                                     <!--EnvÃ­o de los dos pares nombre/valor seleccionados-->
    </form>      
</center>



</body>
</html>
)=====";
//---------------------------------------------------------------
//On board LED Connected to GPIO2
#define LED D2
//SSID and Password of your WiFi router
//const char* ssid = "";
//const char* password = "";

//const char* ssid = "SBG6700AC-FE821";
//const char* password = "d33f0e380b";

//const char* ssid = "ITEC";
//const char* password = "ITECSANTAFE";

//const char* ssid = "AndroidAP";
//const char* password = "thrx7254";

const char* ssid = "WiFi-Arnet-ddaf";
const char* password = "D4DAEDF855";

//Declare a global object variable from the ESP8266WebServer class.
ESP8266WebServer server(80); //Server on port 80
//===============================================================
// This routine is executed when you open its IP in browser
//===============================================================

void handleRoot() {
Serial.println("Main page");
String s = MAIN_page; //Read HTML contents
server.send(200, "text/html", s); //Send web page
}


void handleLEDon() {
Serial.println("LED on page");
digitalWrite(LED,HIGH); //LED is connected in reverse
server.send(200, "text/html", "LED is ON"); //Send ADC value only to client ajax request
}


void handleLEDoff() {
Serial.println("LED off page");
digitalWrite(LED,LOW); //LED off
server.send(200, "text/html", "LED is OFF"); //Send ADC value only to client ajax request
}

void handleServo() {

posicion = server.arg("logra").toInt();  
 
Serial.println("Servo en movimiento");
Serial.println(posicion);
//digitalWrite(LED,LOW); //LED off
servo1.write(posicion);  
delay(15);
server.send(200, "text/html", "Servo en movimiento"); //Send ADC value only to client ajax request
}





//==============================================================
// SETUP
//==============================================================
void setup(void){
Serial.begin(115200);

WiFi.begin(ssid, password); //Connect to your WiFi router
Serial.println("");
//Onboard LED port Direction output
pinMode(LED,OUTPUT);

//Power on LED state off
digitalWrite(LED,HIGH);
// Wait for connection

servo1.attach(D1); //ver bien
servo1.write(20);

while (WiFi.status() != WL_CONNECTED) {
delay(500);
Serial.print("_no_conectado_");
}
//If connection successful show IP address in serial monitor
Serial.println("");
Serial.print("Connected to ");
Serial.println(ssid);
Serial.print("IP address: ");
Serial.println(WiFi.localIP()); //IP address assigned to your ESP
server.on("/", handleRoot); //Which routine to handle at root location. This is display page
server.on("/ledOn", handleLEDon); //as Per <a href="ledOn">, Subroutine to be called
server.on("/ledOff", handleLEDoff);
server.on("/ledServo", handleServo);
server.begin(); //Start server
Serial.println("HTTP server started");



}
//==============================================================
// LOOP
//==============================================================
void loop(void){
server.handleClient(); //Handle client requests
}
